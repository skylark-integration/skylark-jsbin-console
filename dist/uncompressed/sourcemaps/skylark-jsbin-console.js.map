{"version":3,"sources":["skylark-jsbin-console.js"],"names":[],"mappingsfile":"../skylark-jsbin-console.js","sourcesContent":["define('skylark-jsbin-console/jsbin',[\r\n  \"skylark-langx/skylark\"\r\n],function(skylark){\r\n  return skylark.attach(\"intg.jsbin\");\r\n});\ndefine('skylark-jsbin-console/console',[\r\n  \"skylark-jquery\",\r\n   \"./jsbin\"\r\n],function ($,jsbin) {\r\n  'use strict';\r\n  var $document = $(document);\r\n\r\n  // Key-code library\r\n  var keylib={left:37,up:38,right:39,down:40,space:32,\r\n              alt:18,ctrl:17,shift:16,tab:9,enter:13,webkitEnter:10,\r\n              escape:27,backspace:8,\r\n              zero:48,one:49, two:50,three:51,four:52,\r\n              five:53,six:57,seven:58,eight:59,nine:60,\r\n              a:65,b:66,c:67,d:68,e:69,f:70,g:71,h:72,i:73,j:74,k:75,\r\n              l:76,m:77,n:78,o:79,p:80,q:81,r:82,s:83,t:84,u:85,v:86,\r\n              w:87,x:88,y:89,z:90};\r\n\r\n  function cleanse(s) {\r\n    return (s||'').replace(/[<&]/g, function (m) { return {'&':'&amp;','<':'&lt;'}[m];});\r\n  }\r\n\r\n  var historyPosition = -1;\r\n\r\n  /**\r\n   * Run a console command.\r\n   */\r\n  var run = function (cmd, cb) {\r\n    var internalCmd = internalCommand(cmd);\r\n    if (internalCmd) {\r\n      return cb(['info', internalCmd]);\r\n    }\r\n    $document.trigger('console:run', cmd);\r\n  };\r\n\r\n  /**\r\n   * Run and show response to a command fired from the console\r\n   */\r\n  var post = function (cmd, blind, response) {\r\n    var toecho = '';\r\n    if (typeof cmd !== 'string') {\r\n      toecho = cmd.echo;\r\n      blind = cmd.blind;\r\n      response = cmd.response;\r\n      cmd = cmd.cmd;\r\n    } else {\r\n      toecho = cmd;\r\n    }\r\n\r\n    cmd = trim(cmd);\r\n\r\n    // Add the command to the user's history – unless this was blind\r\n    if (!blind) {\r\n      history.push(cmd.trim());\r\n      setHistory(history);\r\n    }\r\n\r\n    // Show the user what they typed\r\n    echo(toecho.trim());\r\n\r\n    // If we were handed a response, show the response straight away – otherwise\r\n    // runs it\r\n    if (response) return showResponse(response);\r\n    run(cmd, showResponse);\r\n\r\n    setCursorTo('');\r\n\r\n  };\r\n\r\n  /**\r\n   * Display the result of a command to the user\r\n   */\r\n  var showResponse = function (response) {\r\n\r\n    // order so it appears at the top\r\n    var el = document.createElement('div'),\r\n        li = document.createElement('li'),\r\n        span = document.createElement('span'),\r\n        parent = output.parentNode;\r\n\r\n    historyPosition = history.length;\r\n\r\n    if (typeof response === 'undefined') return;\r\n\r\n    el.className = 'response';\r\n    span.innerHTML = response[1];\r\n\r\n    //if (response[0] != 'info') prettyPrint([span]); // lwf\r\n    el.appendChild(span);\r\n\r\n    li.className = response[0];\r\n    li.innerHTML = '<span class=\"gutter\"></span>';\r\n    li.appendChild(el);\r\n\r\n    appendLog(li);\r\n\r\n    exec.value = '';\r\n    /*\r\n    if (enableCC) {\r\n      try {\r\n        if (jsbin.panels && jsbin.panels.focused.id === 'console') {\r\n          if (!jsbin.embed) {\r\n            getCursor().focus();\r\n          }\r\n          document.execCommand('selectAll', false, null);\r\n          document.execCommand('delete', false, null);\r\n        }\r\n      } catch (e) {}\r\n    }\r\n    */\r\n  };\r\n\r\n  function log(msg, className) {\r\n    var li = document.createElement('li'),\r\n        div = document.createElement('div');\r\n\r\n    div.innerHTML = msg;\r\n    //prettyPrint([div]); // lwf\r\n    li.className = className || 'log';\r\n    li.innerHTML = '<span class=\"gutter\"></span>';\r\n    li.appendChild(div);\r\n\r\n    appendLog(li);\r\n  }\r\n\r\n  function echo(cmd) {\r\n    var li = document.createElement('li');\r\n\r\n    li.className = 'echo';\r\n    li.innerHTML = '<span class=\"gutter\"></span><div>' + cleanse(cmd) + '</div>';\r\n\r\n    logAfter = null;\r\n\r\n    // logAfter = $(output).find('li.echo:first')[0] || null;\r\n\r\n    // logAfter = output.querySelector('li.echo') || null;\r\n    appendLog(li, true);\r\n  }\r\n\r\n  window.info = function(cmd) {\r\n    var li = document.createElement('li');\r\n\r\n    li.className = 'info';\r\n    li.innerHTML = '<span class=\"gutter\"></span><div>' + cleanse(cmd) + '</div>';\r\n\r\n    // logAfter = output.querySelector('li.echo') || null;\r\n    // appendLog(li, true);\r\n    appendLog(li);\r\n  };\r\n\r\n  function appendLog(el, echo) {\r\n    output.appendChild(el);\r\n    output.parentNode.scrollTop = output.parentNode.scrollHeight + 1000;\r\n    return;\r\n\r\n    if (echo) {\r\n      if (!output.firstChild) {\r\n        output.appendChild(el);\r\n      } else {\r\n        output.insertBefore(el, output.firstChild);\r\n      }\r\n    } else {\r\n      if (!output.lastChild) {\r\n        output.appendChild(el);\r\n      } else {\r\n        // console.log(output.lastChild.nextSibling);\r\n        output.insertBefore(el, logAfter ? logAfter : output.lastChild.nextSibling); //  ? output.lastChild.nextSibling : output.firstChild\r\n      }\r\n    }\r\n  }\r\n\r\n  function internalCommand(cmd) {\r\n    var parts = [], c;\r\n    if (cmd.substr(0, 1) == ':') {\r\n      parts = cmd.substr(1).split(' ');\r\n      c = parts.shift();\r\n      return (commands[c] || noop).apply(this, parts);\r\n    }\r\n  }\r\n\r\n  function noop() {}\r\n\r\n  function showhelp() {\r\n    var commands = [\r\n      ':reset - destroy state and start afresh',\r\n      ':history - list current session history',\r\n      ':load &lt;url&gt; - to inject new DOM',\r\n      ':load &lt;script_url&gt; - to inject external library',\r\n      '      load also supports following shortcuts: <br />      jquery, underscore, prototype, mootools, dojo, rightjs, coffeescript, yui.<br />      eg. :load jquery',\r\n      ':clear - to clear contents of the console',\r\n      ':about jsconsole'\r\n    ];\r\n    return commands.join('\\n');\r\n  }\r\n\r\n  /**\r\n   * Handle loading scripts and DOM into dynamic iframe with event listeners\r\n   */\r\n  var load = (function () {\r\n\r\n    $document.on('console:load:script:error', function (event, err) {\r\n      showResponse(['error', err]);\r\n    });\r\n\r\n    $document.on('console:load:script:success', function (event, url) {\r\n      showResponse(['response', 'Loaded \"' + url + '\"']);\r\n    });\r\n\r\n    $document.on('console:load:dom:error', function (event, err) {\r\n      showResponse(['error', err]);\r\n    });\r\n\r\n    $document.on('console:load:dom:success', function (event, url) {\r\n      showResponse(['response', 'Loaded DOM.']);\r\n    });\r\n\r\n    return function (url) {\r\n      if (navigator.onLine) {\r\n        if (arguments.length > 1 || libraries[url] || url.indexOf('.js') !== -1) {\r\n          return loadScript.apply(this, arguments);\r\n        } else {\r\n          return loadDOM(url);\r\n        }\r\n      } else {\r\n        return \"You need to be online to use :load\";\r\n      }\r\n    }\r\n  }());\r\n\r\n  function loadScript() {\r\n    for (var i = 0; i < arguments.length; i++) {\r\n      (function (url) {\r\n        $document.trigger('console:load:script', url);\r\n      })(libraries[arguments[i]] || arguments[i]);\r\n    }\r\n    return \"Loading script...\";\r\n  }\r\n\r\n  function loadDOM(url) {\r\n    var script = document.createElement('script'),\r\n        cb = 'loadDOM' + +new Date;\r\n\r\n    script.src = 'http://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20html%20where%20url%3D%22' + encodeURIComponent(url) + '%22&format=xml&callback=' + cb;\r\n\r\n    window[cb] = function (yql) {\r\n      if (yql.results.length) {\r\n        var html = yql.results[0].replace(/type=\"text\\/javascript\"/ig,'type=\"x\"').replace(/<body.*?>/, '').replace(/<\\/body>/, '');\r\n\r\n        $document.trigger('console:load:dom', html);\r\n      } else {\r\n        log('Failed to load DOM', 'error');\r\n      }\r\n      try {\r\n        window[cb] = null;\r\n        delete window[cb];\r\n      } catch (e) {}\r\n\r\n    };\r\n\r\n    document.body.appendChild(script);\r\n\r\n    return \"Loading URL into DOM...\";\r\n  }\r\n\r\n  function trim(s) {\r\n    return (s||\"\").replace(/^\\s+|\\s+$/g,\"\");\r\n  }\r\n\r\n  var ccCache = {};\r\n  var ccPosition = false;\r\n\r\n  window._console = {\r\n    clear: function () {\r\n      output.innerHTML = '';\r\n    },\r\n    assert: function() { \r\n      if (arguments.length === 0  || !eval(arguments[0])) {\r\n        var msg = [];\r\n        for(var p in arguments) {\r\n            if (p === \"0\") continue;\r\n            msg.push(arguments[p]);\r\n        }\r\n        var assertionMsg = msg.join(' ') || 'console.assert'\r\n        log('Assertion failed: '+assertionMsg, 'error');\r\n      }\r\n    },\r\n    log: function () {\r\n      var l = arguments.length, i = 0;\r\n      for (; i < l; i++) {\r\n        log(''+arguments[i], true);\r\n      }\r\n    },\r\n    dir: function () {\r\n      var l = arguments.length, i = 0;\r\n      for (; i < l; i++) {\r\n        log(arguments[i]);\r\n      }\r\n    },\r\n    props: function (obj) {\r\n      var props = [], realObj;\r\n      try {\r\n        for (var p in obj) props.push(p);\r\n      } catch (e) {}\r\n      return props;\r\n    },\r\n    error: function (err) {\r\n      log(err.message || err, 'error');\r\n    }\r\n  };\r\n\r\n  // give info support too\r\n  window._console.info = window._console.log;\r\n\r\n  function about() {\r\n    return 'Ported to JS Bin from <a target=\"_new\" href=\"http://jsconsole.com\">jsconsole.com</a>';\r\n  }\r\n\r\n  function setHistory(history) {\r\n    historyPosition = history.length;\r\n    if (typeof JSON == 'undefined') return;\r\n\r\n    try {\r\n      // because FF with cookies disabled goes nuts, and because sometimes WebKit goes nuts too...\r\n      sessionStorage.setItem('history', JSON.stringify(history));\r\n    } catch (e) {}\r\n  }\r\n\r\n  function getHistory() {\r\n    var history = [''];\r\n\r\n    if (typeof JSON == 'undefined') return history;\r\n\r\n    try {\r\n      // because FF with cookies disabled goes nuts, and because sometimes WebKit goes nuts too...\r\n      history = JSON.parse(sessionStorage.getItem('history') || '[\"\"]');\r\n    } catch (e) {}\r\n    return history;\r\n  }\r\n\r\n  function showHistory() {\r\n    var h = getHistory();\r\n    h.shift();\r\n    return h.join(\"\\n\");\r\n  }\r\n\r\n  var exec = document.getElementById('exec'),\r\n      form = exec.form || {},\r\n      output = null,\r\n      history = getHistory(),\r\n      fakeConsole = 'window.parent._console',\r\n      libraries = {\r\n          jquery: 'http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js',\r\n          prototype: 'http://ajax.googleapis.com/ajax/libs/prototype/1/prototype.js',\r\n          dojo: 'http://ajax.googleapis.com/ajax/libs/dojo/1/dojo/dojo.xd.js',\r\n          mootools: 'http://ajax.googleapis.com/ajax/libs/mootools/1/mootools-yui-compressed.js',\r\n          underscore: 'http://jashkenas.github.io/underscore/underscore-min.js',\r\n          rightjs: 'http://rightjs.org/hotlink/right.js',\r\n          coffeescript: 'http://jashkenas.github.io/coffee-script/extras/coffee-script.js',\r\n          yui: 'http://yui.yahooapis.com/3.9.1/build/yui/yui-min.js'\r\n      },\r\n      body = document.getElementsByTagName('body')[0],\r\n      logAfter = null,\r\n      lastCmd = null,\r\n      wait = false,\r\n      commandPresent = /:((?:help|about|load|clear|reset|wait|history)(?:.*))\\n/gi,\r\n      commands = {\r\n        history: showHistory,\r\n        help: showhelp,\r\n        about: about,\r\n        load: load,\r\n        wait: function () {\r\n          wait = true;\r\n          return '';\r\n        },\r\n        clear: function () {\r\n          setTimeout(function () { output.innerHTML = ''; }, 10);\r\n          return 'clearing...';\r\n        },\r\n        reset: function () {\r\n          output.innerHTML = '';\r\n          jsconsole.init(output, true);\r\n          return 'Context reset';\r\n        }\r\n      },\r\n      fakeInput = null,\r\n      getCursor = (function () {\r\n        var cursor;\r\n        return function () {\r\n          if (cursor) return cursor;\r\n          return document.getElementById('cursor') || { focus: function () {} };\r\n        };\r\n      }()),\r\n      // I hate that I'm browser sniffing, but there's issues with Firefox and execCommand so code completion won't work\r\n      iOSMobile = navigator.userAgent.indexOf('AppleWebKit') !== -1 && navigator.userAgent.indexOf('Mobile') !== -1,\r\n      // FIXME Remy, seriously, don't sniff the agent like this, it'll bite you in the arse.\r\n      enableCC = navigator.userAgent.indexOf('AppleWebKit') !== -1 && navigator.userAgent.indexOf('Mobile') === -1 || navigator.userAgent.indexOf('OS 5_') !== -1;\r\n\r\n  /*\r\n   // unnecessary ? //lwf\r\n  if (enableCC) {\r\n    var autofocus = jsbin.embed ? '' : 'autofocus';\r\n    exec.parentNode.innerHTML = '<div ' + autofocus + ' id=\"exec\" autocapitalize=\"off\" spellcheck=\"false\"><span id=\"cursor\" spellcheck=\"false\" autocapitalize=\"off\" autocorrect=\"off\"' + (iOSMobile ? '' : ' contenteditable') + '></span></div>';\r\n    exec = document.getElementById('exec');\r\n  } else {\r\n  */\r\n    $('#console').addClass('plain');\r\n  //}\r\n\r\n  /*\r\n   // unnecessary ? //lwf\r\n  if (enableCC && iOSMobile) {\r\n    fakeInput = document.createElement('input');\r\n    fakeInput.className = 'fakeInput';\r\n    fakeInput.setAttribute('spellcheck', 'false');\r\n    fakeInput.setAttribute('autocorrect', 'off');\r\n    fakeInput.setAttribute('autocapitalize', 'off');\r\n    exec.parentNode.appendChild(fakeInput);\r\n  }\r\n  */\r\n\r\n  function whichKey(event) {\r\n    var keys = {38:1, 40:1, Up:38, Down:40, Enter:10, 'U+0009':9, 'U+0008':8, 'U+0190':190, 'Right':39,\r\n        // these two are ignored\r\n        'U+0028': 57, 'U+0026': 55 };\r\n    return keys[event.keyIdentifier] || event.which || event.keyCode;\r\n  }\r\n\r\n  function setCursorTo(str, append) {\r\n    //str = enableCC ? cleanse(str) : str;    // unnecessary ? //lwf\r\n    var old = exec.value;\r\n\r\n    if (append) {\r\n      exec.value = old + str;\r\n    } else {\r\n      exec.value = str;\r\n    }\r\n\r\n    /*\r\n      // unnecessary ? //lwf\r\n    if (enableCC) {\r\n      if (exec.textContent.length) {\r\n        document.execCommand('selectAll', false, null);\r\n        document.execCommand('delete', false, null);\r\n      }\r\n      document.execCommand('insertHTML', false, str);\r\n      getCursor().focus();\r\n    } else {\r\n    */\r\n      var rows = str.match(/\\n/g);\r\n      exec.setAttribute('rows', rows !== null ? rows.length + 1 : 1);\r\n    //}\r\n  }\r\n\r\n  function findNode(list, node) {\r\n    var pos = 0;\r\n    for (var i = 0; i < list.length; i++) {\r\n      if (list[i] == node) {\r\n        return pos;\r\n      }\r\n      pos += list[i].nodeValue.length;\r\n    }\r\n    return -1;\r\n  };\r\n\r\n  /**\r\n   * Handle keydown events in the console - the money shot.\r\n   */\r\n  exec.onkeydown = function (event) {\r\n    event = event || window.event;\r\n    var keys = {38:1, 40:1},\r\n        wide = body.className == 'large',\r\n        which = whichKey(event),\r\n        enterDown = (which == keylib.enter || which == keylib.webkitEnter);\r\n\r\n    if (typeof which == 'string') which = which.replace(/\\/U\\+/, '\\\\u');\r\n    // Is this a special key?\r\n    if (keys[which]) {\r\n      if (event.shiftKey) return;\r\n      // History cycle\r\n\r\n      // Up\r\n      if (which == keylib.up) {\r\n        historyPosition--;\r\n        // Don't go past the start\r\n        if (historyPosition < 0) historyPosition = 0; //history.length - 1;\r\n      }\r\n      // Down\r\n      if (which == keylib.down) {\r\n        historyPosition++;\r\n        // Don't go past the end\r\n        if (historyPosition >= history.length) historyPosition = history.length; //0;\r\n      }\r\n      if (history[historyPosition] != undefined && history[historyPosition] !== '') {\r\n        setCursorTo(history[historyPosition]);\r\n        return false;\r\n      } else if (historyPosition == history.length) {\r\n        setCursorTo('');\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Execute the code\r\n    else if (enterDown && event.shiftKey == false) { // enter (what about the other one)\r\n      var command = exec.textContent || exec.value;\r\n      // ======================================================================\r\n      if (command.length) post(command);\r\n      // ======================================================================\r\n      return false;\r\n    }\r\n\r\n    // Expand the textarea\r\n    else if (enterDown && event.shiftKey == true) {\r\n      var rows = exec.value.match(/\\n/g);\r\n      rows = rows != null ? rows.length + 2 : 2;\r\n      exec.setAttribute('rows', rows);\r\n    }\r\n\r\n    // Clear the console.\r\n    // Ctrl+L or Meta+Shift+Backspace\r\n    else if ((event.shiftKey && event.metaKey && which == keylib.backspace) ||\r\n             (event.ctrlKey && which == keylib.l)) {\r\n      output.innerHTML = '';\r\n    }\r\n  };\r\n\r\n  /*\r\n   // unnecessary ? //lwf\r\n  if (enableCC && iOSMobile) {\r\n    fakeInput.onkeydown = function (event) {\r\n      var which = whichKey(event),\r\n          enterDown = (which == keylib.enter || which == keylib.webkitEnter)\r\n\r\n      if (enterDown) {\r\n        post(this.value);\r\n        this.value = '';\r\n        getCursor().innerHTML = '';\r\n        return false;\r\n      }\r\n    };\r\n  }\r\n  */\r\n \r\n  form.onsubmit = function (event) {\r\n    event = event || window.event;\r\n    event.preventDefault && event.preventDefault();\r\n    post(exec.textContent || exec.value);\r\n    return false;\r\n  };\r\n\r\n  document.onkeydown = function (event) {\r\n    event = event || window.event;\r\n    var which = event.which || event.keyCode;\r\n\r\n    if (event.shiftKey && event.metaKey && which == 8) {\r\n      output.innerHTML = '';\r\n      getCursor().focus();\r\n    } else if (event.target == output.parentNode && which == 32) { // space\r\n      output.parentNode.scrollTop += 5 + output.parentNode.offsetHeight * (event.shiftKey ? -1 : 1);\r\n    }\r\n  };\r\n\r\n  exec.onclick = function () {\r\n    getCursor().focus();\r\n  };\r\n\r\n  var jsconsole = {\r\n    run: post,\r\n    clear: commands.clear,\r\n    reset: function () {\r\n      this.run(':reset');\r\n    },\r\n    focus: function () {\r\n      //if (enableCC) {  // unnecessary ? //lwf\r\n      //  getCursor().focus();\r\n      //} else {\r\n        $(exec).focus();\r\n      //}\r\n    },\r\n    echo: echo,\r\n    _onloadQueue: [],\r\n    onload: function (fn) {\r\n      var i = 0, length = this._onloadQueue.length;\r\n      if (this.ready === false && fn) { // if not ready and callback passed - cache it\r\n        this._onloadQueue.push(fn);\r\n      } else if (this.ready === true && !fn) { // if ready and not callback - flush cache\r\n        for (; i < length; i++) {\r\n          this._onloadQueue[i].call(this);\r\n        }\r\n        this._onloadQueue = [];\r\n      } else if (fn) { // if callback and ready - run callback\r\n        fn.call(this);\r\n      }\r\n    },\r\n    init: function (outputElement, nohelp) {\r\n      output = outputElement;\r\n\r\n      jsconsole.ready = true;\r\n      jsconsole.onload();\r\n\r\n      if (nohelp === undefined) post(':help', true);\r\n    },\r\n    rawMessage: function (data) {\r\n      if (data.type && data.type == 'error') {\r\n        post(data.cmd, true, ['error', data.response]);\r\n      } else if (data.type && data.type == 'info') {\r\n        window.top.info(data.response);\r\n      } else {\r\n        if (data.cmd.indexOf('console.log') === -1) data.response = data.response.substr(1, data.response.length - 2); // fiddle to remove the [] around the repsonse\r\n        echo(data.cmd);\r\n        log(data.response, 'response');\r\n      }\r\n    },\r\n    setCursorTo: setCursorTo,\r\n  };\r\n\r\n\r\n  return jsbin.console = jsconsole;\r\n});\ndefine('skylark-jsbin-console/main',[\r\n\t\"./console\"\r\n],function(console){\r\n\treturn console;\r\n});\ndefine('skylark-jsbin-console', ['skylark-jsbin-console/main'], function (main) { return main; });\n\n"]}